<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[wolfg's Weblog]]></title>
  <link href="http://blog.guoyong.me/atom.xml" rel="self"/>
  <link href="http://blog.guoyong.me/"/>
  <updated>2013-02-25T16:01:52+00:00</updated>
  <id>http://blog.guoyong.me/</id>
  <author>
    <name><![CDATA[wolfg]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[树莓派串口配置]]></title>
    <link href="http://blog.guoyong.me/blog/2013/02/15/raspberry-pi-serial-port-setup/"/>
    <updated>2013-02-15T17:23:40+00:00</updated>
    <id>http://blog.guoyong.me/blog/2013/02/15/raspberry-pi-serial-port-setup</id>
    <content type="html"><![CDATA[<p>树莓派的串口接口是P1接口上面一排（靠近板子边缘的一排）左数第4针（TX）和第五针（RX）</p>

<p><a href="http://guoyong.me/blog/wp-content/uploads/2013/02/RPI-serial_UART.png"><img src="http://guoyong.me/blog/wp-content/uploads/2013/02/RPI-serial_UART-224x300.png" alt="" /></a></p>

<p>系统中对应的串口设备是/dev/ttyAMAO，但默认用于内核输出日志的。若想连接串口设备，比如GPS模块，需要改动系统这个默认配置。</p>

<p>配置方法如下（修改2个文件，记得先备份好原始文件）：</p>

<ul>
<li><p>修改 /boot/cmdline.txt</p>

<p>$ sudo vi /boot/cmdline.txt</p></li>
</ul>


<p>将原来的内容</p>

<pre><code>dwc_otg.lpm_enable=0 console=ttyAMA0,115200 kgdboc=ttyAMA0,115200 console=tty1 root=/dev/mmcblk0p2 rootfstype=ext4 elevator=deadline rootwait
</code></pre>

<p>修改成</p>

<pre><code>dwc_otg.lpm_enable=0 console=tty1 root=/dev/mmcblk0p2 rootfstype=ext4 elevator=deadline rootwait
</code></pre>

<ul>
<li><p>修改/etc/inittab 注释掉下面这一行，一般是文件的最后一行。注释掉就是在行首添加一个英文井号。</p>

<p>$ sudo vi /etc/inittab</p>

<h1>T0:23:respawn:/sbin/getty -L ttyAMA0 115200 vt100</h1></li>
</ul>


<p>顺便说下命令行下用什么编辑器，我比较习惯用vi。对命令行不太熟悉的同学就用nano吧，用之前google下教程，非常简单。</p>

<p>改好这两个文件后，关机。接好串口设备开机，为了检查串口有没有工作，需要安装个串口通讯软件minicom。</p>

<pre><code>$ wajig install minicom
</code></pre>

<p>这里我使用了wajig这个工具，它对apt系列工具进行了封装，更易用，强烈推荐。</p>

<p>安装好minicom后，需要先根据你的串口设备进行相应的设置，比如速率什么的</p>

<pre><code>$ sudo minicom -s 
</code></pre>

<p><a href="http://guoyong.me/blog/wp-content/uploads/2013/02/minicom_1.png"><img src="http://guoyong.me/blog/wp-content/uploads/2013/02/minicom_1-266x300.png" alt="" /></a></p>

<p>选择主菜单的第三项Serial Port Setup，进入下一级菜单。</p>

<p><a href="http://guoyong.me/blog/wp-content/uploads/2013/02/minicom_2.png"><img src="http://guoyong.me/blog/wp-content/uploads/2013/02/minicom_2-266x300.png" alt="" /></a></p>

<p>用菜单项的第一个提示字母选择：按A 修改串口设备为 /dev/ttyAMA0，按E修改速率等设置</p>

<p><a href="http://guoyong.me/blog/wp-content/uploads/2013/02/minicom_3.png"><img src="http://guoyong.me/blog/wp-content/uploads/2013/02/minicom_3-266x300.png" alt="" /></a></p>

<p>设置好后，主菜单里选择Save setup as dfl保存，然后选择Exit（最后一项Exit from Minicom是退出程序）。如果设置正确，就应该收到一些数据了。按Ctrl+A，再按Z可以查看minicom的帮助，Ctrl+A再按Q退出minicom。</p>

<p>串口设置好了，下一篇介绍gpsd的配置。最后，欢迎订阅微信公众帐号“树莓派玩家”，搜索raspberry_pi或者扫描下面的二维码。</p>

<p><a href="http://guoyong.me/blog/wp-content/uploads/2013/02/qrcode_for_gh_f5648ddbdaf3_258.jpg"><img src="http://guoyong.me/blog/wp-content/uploads/2013/02/qrcode_for_gh_f5648ddbdaf3_258.jpg" alt="" /></a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Raspberry Pi 跨年之旅 – 第五天]]></title>
    <link href="http://blog.guoyong.me/blog/2013/01/12/play-raspberry-pi-day5/"/>
    <updated>2013-01-12T17:27:18+00:00</updated>
    <id>http://blog.guoyong.me/blog/2013/01/12/play-raspberry-pi-day5</id>
    <content type="html"><![CDATA[<p>受国外玩家的启发，用乐高积木搭了个“机箱”。</p>

<p><a href="http://guoyong.me/blog/wp-content/uploads/2013/01/lego-case.jpg"><img src="http://guoyong.me/blog/wp-content/uploads/2013/01/lego-case-150x150.jpg" alt="" /></a></p>

<p>假期结束，Raspberry Pi的跨年之旅也完美结束了。</p>

<p>下一步的计划是制作一台车载电脑。</p>

<p>敬请期待。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Raspberry Pi 跨年之旅 – 第四天]]></title>
    <link href="http://blog.guoyong.me/blog/2013/01/12/play-raspberry-pi-day4/"/>
    <updated>2013-01-12T17:23:34+00:00</updated>
    <id>http://blog.guoyong.me/blog/2013/01/12/play-raspberry-pi-day4</id>
    <content type="html"><![CDATA[<p>今天先安装了一些自己常用的工具和软件：oh-my-zsh, gitflow, geany, vim, gimp 什么的。</p>

<p>试了下另一个桌面环境OpenBox，很简洁很强大，但不太熟悉。想起可以用之前在笔记本上玩Gentoo时用过的Fluxbox桌面，刚好配置还搁在github上。</p>

<p><a href="http://guoyong.me/blog/wp-content/uploads/2013/01/IMG_4228.jpg"><img src="http://guoyong.me/blog/wp-content/uploads/2013/01/IMG_4228-e1357982513145-150x150.jpg" alt="" /></a></p>

<p>安装Fcitx输入法，注意要把它需要的环境变量设置在/etc/profile.d/下的脚本中。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Raspberry Pi 跨年之旅 – 第三天]]></title>
    <link href="http://blog.guoyong.me/blog/2013/01/12/play-raspberry-pi-day3/"/>
    <updated>2013-01-12T16:38:00+00:00</updated>
    <id>http://blog.guoyong.me/blog/2013/01/12/play-raspberry-pi-day3</id>
    <content type="html"><![CDATA[<p>树莓派装好后，系统默认设置的源地址是http://mirrordirector.raspbian.org/raspbian/ 这个会自动寻找离你最“近”的源镜像服务器，但不幸的是我这里找到的在教育网内，太慢了。修改/etc/apt/source.list，用了一个韩国的镜像，快了很多。</p>

<p>安装Arduino开发环境</p>

<pre><code>&lt;code&gt;$ wajig install arduino
&lt;/code&gt;
</code></pre>

<p>安装好后，启动连接Arduino开发板，启动开发环境主程序。编译上传Blink示例程序，没有任何问题。</p>

<p><a href="http://guoyong.me/blog/wp-content/uploads/2013/01/IMG_4202.jpg"><img src="http://guoyong.me/blog/wp-content/uploads/2013/01/IMG_4202-150x150.jpg" alt="" /></a></p>

<p>待续。。。</p>

<p>Raspberry Pi 跨年之旅：</p>

<ul>
<li><p><a href="http://guoyong.me/linux/play-raspberry-pi-day1/">Day 1</a></p></li>
<li><p><a href="http://guoyong.me/linux/play-raspberry-pi-day2/">Day 2</a></p></li>
<li><p><a href="http://guoyong.me/linux/play-raspberry-pi-day3/">Day 3</a></p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Raspberry Pi 跨年之旅 - 第二天]]></title>
    <link href="http://blog.guoyong.me/blog/2013/01/04/play-raspberry-pi-day2/"/>
    <updated>2013-01-04T22:20:00+00:00</updated>
    <id>http://blog.guoyong.me/blog/2013/01/04/play-raspberry-pi-day2</id>
    <content type="html"><![CDATA[<p>2012年12月30日 傍晚，京东上订购的转接线到货了，接上显示器，一切正常。</p>

<p><a href="http://guoyong.me/blog/wp-content/uploads/2013/01/IMG_4174.jpg"><img src="http://guoyong.me/blog/wp-content/uploads/2013/01/IMG_4174-e1357308299192-150x150.jpg" alt="" /></a></p>

<p>反复测试发现USB无线网卡不能接在USB HUB上。 罗技摄像头也能识别出来，用mplayer可以测试：</p>

<pre><code>&lt;code&gt;$ mplayer tv:// 
&lt;/code&gt;
</code></pre>

<p>找出一个以前装388手机充电器的塑料盒子，决定给树莓派做一个机箱。有赖于老爸备下的两把小挫，花了快2个小时的时间，总算把接口都做出来了，可惜规划得不好，难看。</p>

<p><a href="http://guoyong.me/blog/wp-content/uploads/2013/01/IMG_4231.jpg"><img src="http://guoyong.me/blog/wp-content/uploads/2013/01/IMG_4231-150x150.jpg" alt="" /></a> <a href="http://guoyong.me/blog/wp-content/uploads/2013/01/IMG_4232.jpg"><img src="http://guoyong.me/blog/wp-content/uploads/2013/01/IMG_4232-150x150.jpg" alt="" /></a> <a href="http://guoyong.me/blog/wp-content/uploads/2013/01/IMG_4180.jpg"><img src="http://guoyong.me/blog/wp-content/uploads/2013/01/IMG_4180-150x150.jpg" alt="" /></a></p>

<p>待续。。。</p>

<p>Raspberry Pi 跨年之旅：</p>

<ul>
<li><p><a href="http://guoyong.me/linux/play-raspberry-pi-day1/">Day 1</a></p></li>
<li><p><a href="http://guoyong.me/linux/play-raspberry-pi-day2/">Day 2</a></p></li>
<li><p><a href="http://guoyong.me/linux/play-raspberry-pi-day3/">Day 3</a></p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Raspberry Pi 跨年之旅 - 第一天]]></title>
    <link href="http://blog.guoyong.me/blog/2013/01/03/play-raspberry-pi-day1/"/>
    <updated>2013-01-03T21:02:27+00:00</updated>
    <id>http://blog.guoyong.me/blog/2013/01/03/play-raspberry-pi-day1</id>
    <content type="html"><![CDATA[<p>2012年12月30日，元旦5天假期开始。公司是文艺公司，所以连放五天假。天气寒冷，不想到户外活动。想起了买来后一直没动过的树莓派，决定趁着有时间赶紧玩一玩。</p>

<p>先去到官网，读了下Quick Start文档，下载Raspbian “wheezy”映像文件。</p>

<p>接着开始准备硬件：</p>

<ol>
<li><p>SD卡：闲置的一个PNY Class 6 4GB</p></li>
<li><p>键盘鼠标：闲置的一套罗技无线键鼠 型号K260</p></li>
<li><p>电源：TP-LINK无线路由器WR703N的电源，输出电源5V，电流1A</p></li>
<li><p>显示设备：家里的液晶电视，有HDMI接口</p></li>
<li><p>无线网卡：闲置的腾达150M USB无线网卡</p></li>
<li><p>4口USB Hub一个</p></li>
<li><p>罗技摄像头</p></li>
</ol>


<p><a href="http://guoyong.me/blog/wp-content/uploads/2013/01/IMG_4230.jpg"><img src="http://guoyong.me/blog/wp-content/uploads/2013/01/IMG_4230-150x150.jpg" alt="树莓派需要的硬件" /></a></p>

<p>安装Raspbian系统到SD卡，用的是dd命令，详细过程参考<a href="http://elinux.org/RPi_Easy_SD_Card_Setup">这里</a></p>

<p>接好各个部分，开机！结果，没显示。。。（我确定电视已经切换到正确的信号源）。一番搜索，<a href="http://www.raspberrypi.org/phpBB3/viewtopic.php?f=28&amp;t=23624">官网论坛</a>里找到一样的问题，里面指出了<a href="http://elinux.org/R-Pi_Troubleshooting#Display">解决方法</a>。</p>

<p>修改SD卡根目录下的config.txt文件（后话：这个文件在扩展root文件系统后的路径是/boot/config.txt），两处地方：</p>

<pre><code>&lt;code&gt;config_hdmi_boost=4
hdmi_force_hotplug=1
&lt;/code&gt;
</code></pre>

<p>重新开机，看到启动画面了！</p>

<p>系统进入了raspi-config程序，一定要设置键盘布局，layout要改成US（我是用了一会儿发现按键不对才用运行raspi-config修改的）。locale也选en_US为默认，把zh_CN的几个也选上。选择时区，最后选定扩展root文件系统至SD卡。</p>

<p>初始设置完成后，系统进入LXDE桌面。打开wpa_gui程序（桌面上有图标），设置无线网络。这里也遇到个小弯路，家里路由器的安全设置设置了仅使用AES加密方式，结果wpa_supplicant不支持，修改路由器设置后成功连接Wifi。</p>

<p>连上网后，apt-get更新系统，安装熟悉的各种工具：wajig, git, &#8230;&#8230;</p>

<p>马上clone了自己之前写的后台播放豆瓣电台的<a href="https://github.com/wolfg1969/fmbox">Python程序</a>，wajig安装几个依赖后，运行成功，比起折腾路由器上折腾OpenWRT真是轻松多了。</p>

<p>想到自己还有一个闲置的液晶显示器，VGA接口的，于是马上到京东上下单购买HDMI到VGA的转接线，预计第二天就可以到了。</p>

<p>当天的几张照片：</p>

<p><a href="http://guoyong.me/blog/wp-content/uploads/2013/01/IMG_4165.jpg"><img src="http://guoyong.me/blog/wp-content/uploads/2013/01/IMG_4165-e1357225571542-150x150.jpg" alt="" /></a></p>

<p><a href="http://guoyong.me/blog/wp-content/uploads/2013/01/IMG_4168.jpg"><img src="http://guoyong.me/blog/wp-content/uploads/2013/01/IMG_4168-e1357225618376-150x150.jpg" alt="" /></a></p>

<p><a href="http://guoyong.me/blog/wp-content/uploads/2013/01/IMG_4170.jpg"><img src="http://guoyong.me/blog/wp-content/uploads/2013/01/IMG_4170-e1357225409692-150x150.jpg" alt="" /></a></p>

<p>待续。。。 （图像显示自动旋转了90度，将就下吧）</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[今天用到的两个命令]]></title>
    <link href="http://blog.guoyong.me/blog/2012/11/12/push-tags-and-delete-remote-branch/"/>
    <updated>2012-11-12T17:39:00+00:00</updated>
    <id>http://blog.guoyong.me/blog/2012/11/12/push-tags-and-delete-remote-branch</id>
    <content type="html"><![CDATA[<p>今天用到了两个git命令：</p>

<h2>把本地打的标签推到远程仓库</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git push --tags</span></code></pre></td></tr></table></div></figure>


<p>这个用在git flow release finish之后，把新建的版本tag推到中心库里。</p>

<h2>删除远程仓库里的废弃分支</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git branch -D depreated_branch
</span><span class='line'>$ git push origin :depreated_branch</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[重建Octopress环境]]></title>
    <link href="http://blog.guoyong.me/blog/2012/11/11/re-setup-octopress/"/>
    <updated>2012-11-11T20:36:00+00:00</updated>
    <id>http://blog.guoyong.me/blog/2012/11/11/re-setup-octopress</id>
    <content type="html"><![CDATA[<p>在另一台机器上重新设置Octopress环境的步骤如下：</p>

<h2>安装octopress</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># 安装rvm, ruby, bundler 略
</span><span class='line'># 克隆octopress
</span><span class='line'>$ git clone git://github.com/imathis/octopress.git octopress
</span><span class='line'># 安装主题
</span><span class='line'>$ rake install</span></code></pre></td></tr></table></div></figure>


<h2>设置github帐号</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rake setup_github_pages</span></code></pre></td></tr></table></div></figure>


<h2>同步Github上已发布的博客</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># 覆盖本地修改
</span><span class='line'>$ git checkout .
</span><span class='line'>$ rm -rf saas source
</span><span class='line'>$ git fetch origin
</span><span class='line'>$ git merge origin/source
</span><span class='line'># 可能需要手动merge</span></code></pre></td></tr></table></div></figure>


<h2>开始写作！</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rake new_post[new_post]
</span><span class='line'>$ rake generate
</span><span class='line'>$ rake deploy</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[撤销最近一次提交]]></title>
    <link href="http://blog.guoyong.me/blog/2012/11/07/undo-last-git-commit/"/>
    <updated>2012-11-07T16:50:00+00:00</updated>
    <id>http://blog.guoyong.me/blog/2012/11/07/undo-last-git-commit</id>
    <content type="html"><![CDATA[<p>团队里的一位兄弟忘了切换分支就commit了，而且还push到了中心库。这就需要把这次commit给回退，操作如下：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git reset --hard HEAD~1
</span><span class='line'>$ git push -f origin HEAD</span></code></pre></td></tr></table></div></figure>


<p>当然，这是把这次commit彻底做掉了。如果想保留，就不使用&#8211;hard参数。当然，还有&#8211;soft参数，以后再研究。</p>

<p>Before reset:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>   (F)
</span><span class='line'>A-B-C
</span><span class='line'>    ↑
</span><span class='line'>   HEAD</span></code></pre></td></tr></table></div></figure>


<p>After reset(&#8211;hard):</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> (F)
</span><span class='line'>A-B
</span><span class='line'>  ↑
</span><span class='line'> HEAD</span></code></pre></td></tr></table></div></figure>


<p>After reset:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>   (F)
</span><span class='line'>A-B-C
</span><span class='line'>  ↑
</span><span class='line'> HEAD</span></code></pre></td></tr></table></div></figure>


<p>参考：</p>

<ul>
<li><a href="http://schacon.github.com/git/git-reset.html">http://schacon.github.com/git/git-reset.html</a></li>
<li><a href="http://stackoverflow.com/questions/927358/undo-last-git-commit">Undo last Git commit</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
